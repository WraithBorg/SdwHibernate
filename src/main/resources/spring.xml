<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/websocket
    	http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

	<bean id="context" class="com.vogue.circle.util.SprContext" abstract="false" lazy-init="default" autowire="default" />
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath*:config.properties"  ignore-resource-not-found="true" ignore-unresolvable="true" />
	<!-- 配置数据源 c3p0 com.vogue.circle.dbpool.ComboPooledDataSource  org.springframework.jdbc.datasource.DriverManagerDataSource-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 配置 hibernate 的 SessionFactory -->
	<bean id="sessionFactory" class="com.sdw.base.utils.SessionFactoryBean">
		<property name="context" ref="context"/>
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<property name="packagesToScan" value="com.sdw.*.entity" />
	</bean>
	<!-- redis工厂 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
	    p:host-name="127.0.0.1" p:port="6379" />
	<!-- redis服务封装 -->
	<bean id="redisService" class="com.sdw.base.utils.RedisService" />

	<!-- 扫描 dao,service 自动注入为 bean -->
	<context:component-scan base-package="com.sdw.**.service.impl,
										  com.sdw.**.dao.impl,
										  com.sdw.base" />
	<!-- 使用注解方式定义事务 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

	<!-- 定义事务管理器（声明式的事务）  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置事务传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true"  />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true"  />
		</tx:attributes>
	</tx:advice>

	<!-- Spring aop 事务管理 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allManagerMethod" expression="execution(* com.sdw.*service..*.*(..)) or execution(* com.sdw.*util..*.*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="allManagerMethod"/>
	</aop:config>

		<!-- 国际化支持 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化信息所在的文件名 -->
		<property name="basename">
			<value>messages/messages</value>
		</property>
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
		<property name="useCodeAsDefaultMessage" value="true" />
		<!-- 刷新资源文件的周期，以秒为单位-->
		<property name="cacheSeconds" value="5"/>
	</bean>
</beans>
