<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<!-- <welcome-file-list> <welcome-file>login.jsp</welcome-file> </welcome-file-list> -->

	<!-- 首页 -->
	<welcome-file-list>
		<welcome-file>view/login.jsp</welcome-file>
	</welcome-file-list>

	<!-- 配置session超时时间，单位分钟 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- 默认为"webapp.root" -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>SdwHibernate.root</param-value>
	</context-param>

	<!--① 从类路径下加载spring和log4j 配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<!-- 负责启动spring容器的监听器，他将引用①处的上下文参数获得Spring配置文件地址 -->
	<!-- 注意需要将log4j.propertis 日志配置文件放在类路径下，以便日志引擎自动生效-->
	<!-- 容器初始化（销毁）时开启（关闭）Log4j
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>-->

	<!-- 关闭容器时的处理 ,包含 容器初始化（销毁）时开启（关闭）Log4j-->

	<!-- 监听servletContext，启动contextConfigLocation中的spring配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 得到request,session,globalsession 三个作用域的支持 -->
	<listener>
    	<listener-class>org.springframework.web.context.request.RequestContextListener </listener-class>
	</listener>

	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 字符编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- spring mvc配置 -->
	<servlet>
		<description>spring mvc servlet</description>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 此处配置的是SpringMVC的配置文件 -->
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- open session filter -->
    <filter>
        <filter-name>openSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>openSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>

